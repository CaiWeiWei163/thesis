<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdf.dao.ThesisInfoMapper">
    <resultMap id="BaseResultMap" type="com.tdf.entity.ThesisInfo">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="author" property="author" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="keyword" property="keyword" jdbcType="VARCHAR"/>
        <result column="literature" property="literature" jdbcType="VARCHAR"/>
        <result column="abstract_content" property="abstractContent" jdbcType="VARCHAR"/>
        <result column="fileinfo_id" property="fileinfoId" jdbcType="VARCHAR"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="create_user" property="createUser" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_user" property="updateUser" jdbcType="VARCHAR"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.tdf.entity.ThesisInfo" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, title, author, type, keyword, literature, abstract_content, fileinfo_id, state, 
    create_user, create_time, update_user, update_time
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>

    <!--统计总记录数-->
    <select id="getCountThesis" resultType="int">
        SELECT
        count(1)
        FROM
        thesis_info
        where thesis_info.state != 2
    </select>
    <!--论文列表-->
    <select id="listThesis" resultType="com.tdf.entity.ThesisInfo">
        SELECT
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM
        thesis_info
        where thesis_info.state != 2
        order by thesis_info.create_time desc
        <if test="pageSize>0">
            limit #{topIndex},#{pageSize}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from thesis_info
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from thesis_info
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.tdf.entity.ThesisInfo">
    insert into thesis_info (id, title, author, 
      type, keyword, literature, 
      abstract_content, fileinfo_id, state, 
      create_user, create_time, update_user, 
      update_time, content)
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{keyword,jdbcType=VARCHAR}, #{literature,jdbcType=VARCHAR}, 
      #{abstractContent,jdbcType=VARCHAR}, #{fileinfoId,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.tdf.entity.ThesisInfo">
        insert into thesis_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="keyword != null">
                keyword,
            </if>
            <if test="literature != null">
                literature,
            </if>
            <if test="abstractContent != null">
                abstract_content,
            </if>
            <if test="fileinfoId != null">
                fileinfo_id,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="createUser != null">
                create_user,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateUser != null">
                update_user,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="keyword != null">
                #{keyword,jdbcType=VARCHAR},
            </if>
            <if test="literature != null">
                #{literature,jdbcType=VARCHAR},
            </if>
            <if test="abstractContent != null">
                #{abstractContent,jdbcType=VARCHAR},
            </if>
            <if test="fileinfoId != null">
                #{fileinfoId,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tdf.entity.ThesisInfo">
        update thesis_info
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="keyword != null">
                keyword = #{keyword,jdbcType=VARCHAR},
            </if>
            <if test="literature != null">
                literature = #{literature,jdbcType=VARCHAR},
            </if>
            <if test="abstractContent != null">
                abstract_content = #{abstractContent,jdbcType=VARCHAR},
            </if>
            <if test="fileinfoId != null">
                fileinfo_id = #{fileinfoId,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="createUser != null">
                create_user = #{createUser,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUser != null">
                update_user = #{updateUser,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tdf.entity.ThesisInfo">
    update thesis_info
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      literature = #{literature,jdbcType=VARCHAR},
      abstract_content = #{abstractContent,jdbcType=VARCHAR},
      fileinfo_id = #{fileinfoId,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.tdf.entity.ThesisInfo">
    update thesis_info
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      keyword = #{keyword,jdbcType=VARCHAR},
      literature = #{literature,jdbcType=VARCHAR},
      abstract_content = #{abstractContent,jdbcType=VARCHAR},
      fileinfo_id = #{fileinfoId,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>